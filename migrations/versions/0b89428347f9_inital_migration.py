"""inital migration

Revision ID: 0b89428347f9
Revises: None
Create Date: 2015-12-30 11:12:38.340722

"""

# revision identifiers, used by Alembic.
revision = '0b89428347f9'
down_revision = None

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('accepted_domains',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('domain', sa.String(length=255), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('domain')
    )
    op.create_table('app_status',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.Column('last_updated', sa.DateTime(), nullable=True),
    sa.Column('county_max_deadline', sa.DateTime(), nullable=True),
    sa.Column('message', sa.Text(), nullable=True),
    sa.Column('last_beacon_newsletter', sa.DateTime(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nigp_codes', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('category', sa.String(length=255), nullable=True),
    sa.Column('subcategory', sa.String(length=255), nullable=True),
    sa.Column('category_friendly_name', sa.Text(), nullable=True),
    sa.Column('examples', sa.Text(), nullable=True),
    sa.Column('examples_tsv', postgresql.TSVECTOR(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_category_id'), 'category', ['id'], unique=False)
    opportunity_type=op.create_table('opportunity_type',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('opportunity_response_instructions', sa.Text(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_opportunity_type_id'), 'opportunity_type', ['id'], unique=False)
    department=op.create_table('department',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('document',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('display_name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('form_href', sa.String(length=255), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_document_id'), 'document', ['id'], unique=False)
    op.create_table('job_status',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('info', sa.Text(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('name', 'date')
    )
    roles=op.create_table('roles',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=80), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('vendor',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('business_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('fax_number', sa.String(length=20), nullable=True),
    sa.Column('minority_owned', sa.Boolean(), nullable=True),
    sa.Column('veteran_owned', sa.Boolean(), nullable=True),
    sa.Column('woman_owned', sa.Boolean(), nullable=True),
    sa.Column('disadvantaged_owned', sa.Boolean(), nullable=True),
    sa.Column('subscribed_to_newsletter', sa.Boolean(), nullable=False),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_vendor_id'), 'vendor', ['id'], unique=False)
    op.create_table('category_vendor_association',
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ondelete='SET NULL')
    )
    op.create_index(op.f('ix_category_vendor_association_category_id'), 'category_vendor_association', ['category_id'], unique=False)
    op.create_index(op.f('ix_category_vendor_association_vendor_id'), 'category_vendor_association', ['vendor_id'], unique=False)
    op.create_table('users',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=80), nullable=False),
    sa.Column('first_name', sa.String(length=30), nullable=True),
    sa.Column('last_name', sa.String(length=30), nullable=True),
    sa.Column('active', sa.Boolean(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('opportunity',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('planned_publish', sa.DateTime(), nullable=False),
    sa.Column('planned_submission_start', sa.DateTime(), nullable=False),
    sa.Column('planned_submission_end', sa.DateTime(), nullable=False),
    sa.Column('vendor_documents_needed', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('is_archived', sa.Boolean(), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('publish_notification_sent', sa.Boolean(), nullable=False),
    sa.Column('department_id', sa.Integer(), nullable=True),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('opportunity_type_id', sa.Integer(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['users.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['department_id'], ['department.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['opportunity_type_id'], ['opportunity_type.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('category_opportunity_association',
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.Column('opportunity_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ondelete='SET NULL')
    )
    op.create_index(op.f('ix_category_opportunity_association_category_id'), 'category_opportunity_association', ['category_id'], unique=False)
    op.create_index(op.f('ix_category_opportunity_association_opportunity_id'), 'category_opportunity_association', ['opportunity_id'], unique=False)
    op.create_table('opportunity_document',
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('href', sa.Text(), nullable=True),
    sa.Column('updated_by_id', sa.Integer(), nullable=True),
    sa.Column('created_by_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['users.id'], name='created_by_id_fkey', use_alter=True),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ondelete='cascade'),
    sa.ForeignKeyConstraint(['updated_by_id'], ['users.id'], name='updated_by_id_fkey', use_alter=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_opportunity_document_id'), 'opportunity_document', ['id'], unique=False)
    op.create_table('opportunity_vendor_association_table',
    sa.Column('opportunity_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ondelete='SET NULL')
    )
    op.create_index(op.f('ix_opportunity_vendor_association_table_opportunity_id'), 'opportunity_vendor_association_table', ['opportunity_id'], unique=False)
    op.create_index(op.f('ix_opportunity_vendor_association_table_vendor_id'), 'opportunity_vendor_association_table', ['vendor_id'], unique=False)
    ### end Alembic commands ###

    op.bulk_insert(roles, [
        {'name': 'admin'},
        {'name': 'approver'},
        {'name': 'staff'}
    ])

    op.bulk_insert(department, [
        {'name': 'Other'},
        {'name': 'New User'}
    ])

    op.bulk_insert(opportunity_type, [
        {
            'name': 'General Opportunity',
            'opportunity_response_instructions': 'Please refer to the opportunity document for more information.'
        }
    ])

def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_opportunity_vendor_association_table_vendor_id'), table_name='opportunity_vendor_association_table')
    op.drop_index(op.f('ix_opportunity_vendor_association_table_opportunity_id'), table_name='opportunity_vendor_association_table')
    op.drop_table('opportunity_vendor_association_table')
    op.drop_index(op.f('ix_opportunity_document_id'), table_name='opportunity_document')
    op.drop_table('opportunity_document')
    op.drop_index(op.f('ix_category_opportunity_association_opportunity_id'), table_name='category_opportunity_association')
    op.drop_index(op.f('ix_category_opportunity_association_category_id'), table_name='category_opportunity_association')
    op.drop_table('category_opportunity_association')
    op.drop_table('opportunity')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_category_vendor_association_vendor_id'), table_name='category_vendor_association')
    op.drop_index(op.f('ix_category_vendor_association_category_id'), table_name='category_vendor_association')
    op.drop_table('category_vendor_association')
    op.drop_index(op.f('ix_vendor_id'), table_name='vendor')
    op.drop_table('vendor')
    op.drop_table('roles')
    op.drop_table('job_status')
    op.drop_index(op.f('ix_document_id'), table_name='document')
    op.drop_table('document')
    op.drop_table('department')
    op.drop_index(op.f('ix_opportunity_type_id'), table_name='opportunity_type')
    op.drop_table('opportunity_type')
    op.drop_index(op.f('ix_category_id'), table_name='category')
    op.drop_table('category')
    op.drop_table('app_status')
    op.drop_table('accepted_domains')
    ### end Alembic commands ###
